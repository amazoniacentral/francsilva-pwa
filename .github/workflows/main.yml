name: Build and Sign APK

on:
  push:
    branches:
      - main  # Altere para a branch que você deseja monitorar

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Configurar o Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Versão do Node.js

      # Passo 3: Instalar o Bubblewrap
      - name: Install Bubblewrap
        run: |
          npm install -g @bubblewrap/cli

      # Passo 4: Configurar o JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Passo 5: Instalar o Android SDK e Build Tools
      - name: Install Android SDK and Build Tools
        run: |
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip -O tools.zip
          mkdir -p $HOME/android-sdk
          unzip tools.zip -d $HOME/android-sdk
          yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses
          $HOME/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "build-tools;29.0.2"

      # Passo 6: Adicionar o Android SDK ao PATH
      - name: Add SDK to PATH
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/platform-tools:$HOME/android-sdk/build-tools/29.0.2:$PATH" >> $GITHUB_ENV

      # Passo 7: Inicializar o Bubblewrap usando o JDK e SDK instalados
      - name: Initialize Bubblewrap
        run: |
          export JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.14-7/x64
          export PATH=$JAVA_HOME/bin:$PATH
          bubblewrap init --manifest https://api.gvendas.app.br/gvendas/site/3/manifest/?format=json --no-interactive --jdk $JAVA_HOME

      # Passo 8: Gerar o APK com chave de assinatura automaticamente
      - name: Generate APK
        run: |
          bubblewrap build --keystore-path gvendas.keystore --key-password ${{ secrets.KEY_PASSWORD }} --key-alias gvendas

      # Passo 9: Fazer o upload do APK gerado como Artefato
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gvendas-apk-${{ github.run_id }}
          path: output/gvendas.apk
