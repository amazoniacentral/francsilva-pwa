name: Build e Assinar APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Verificar código do repositório
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Instalar dependências
        run: |
          rm -rf .bubblewrap
          sudo apt-get update

          # Instalar JDK 17
          sudo apt-get install -y openjdk-17-jdk jq unzip

          # Definir variáveis do Android SDK
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH

          # Baixar e instalar Android SDK
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mv cmdline-tools latest
          rm cmdline-tools.zip

          # Verificar se o sdkmanager está instalado
          if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "sdkmanager instalado em: $ANDROID_HOME/cmdline-tools/latest/bin"
          else
            echo "Erro: sdkmanager não foi encontrado!" >&2
            exit 1
          fi

          # Instalar componentes do SDK
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

          # Criar o arquivo de configuração do Bubblewrap
          mkdir -p ~/.bubblewrap
          echo '{ "jdkPath": "/usr/lib/jvm/java-17-openjdk-amd64", "androidSdkPath": "'"$ANDROID_HOME"'" }' > ~/.bubblewrap/config.json

      - name: Verificar caminho do Android SDK
        run: |
          echo "ANDROID_HOME está definido como: $ANDROID_HOME"
          echo "Conteúdo do diretório do Android SDK:"
          ls -la $ANDROID_HOME || echo "Erro: Diretório do Android SDK não encontrado!"
          echo "Conteúdo do cmdline-tools/latest/bin:"
          ls -la $ANDROID_HOME/cmdline-tools/latest/bin || echo "Erro: cmdline-tools/latest/bin não encontrado!"

      - name: Testar sdkmanager e exibir diretório do SDK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH
          
          echo "Versão do sdkmanager:"
          sdkmanager --version || echo "Erro ao executar sdkmanager"

      - name: Verificar configuração do Bubblewrap
        run: |
          echo "Conteúdo de ~/.bubblewrap/config.json:"
          cat ~/.bubblewrap/config.json || echo "Erro: Arquivo de configuração do Bubblewrap não encontrado!"

      - name: Configurar Keystore e Variáveis de Ambiente
        run: |
          echo "$KEYSTORE" | base64 --decode > $HOME/android.keystore
          chmod 600 $HOME/android.keystore
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}

      - name: Atualizar o Bubblewrap
        run: npm install -g @bubblewrap/cli@latest

      - name: Testar Bubblewrap manualmente
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH
          
          bubblewrap doctor || echo "Erro ao executar bubblewrap doctor"

      - name: Inicializar e construir o aplicativo
        run: |
          sudo apt-get install -y expect
          expect <<EOF
          spawn bubblewrap init --manifest https://api.gvendas.app.br/gvendas/site/3/manifest/?format=json --packageId com.francsilva.pwa --host francsilva.com.br --name "Francisco Silva App" --launcherName "FSilva HND" --no-interactive
          expect "? Domain:"
          send "francsilva.com.br\r"
          expect "? URL path:"
          send "/\r"
          expect eof
          EOF
          cat twa-manifest.json || echo "Erro: twa-manifest.json não foi criado"
          bubblewrap build
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          PACKAGE_NAME: com.francsilva.pwa
          DOMAIN: francsilva.com.br
          URL_PATH: /
          VERSION_CODE: 1
          VERSION_NAME: 1.0.0
          MIN_SDK_VERSION: 21
