name: Build PWA APK for Google Play Store

on:
  push:
    branches:
      - main  # Isso roda o workflow sempre que houver push na branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Versão 4 do checkout

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '17'  # Usando Node.js 17

    - name: Install Bubblewrap CLI globally
      run: |
        npm install -g @bubblewrap/cli  # Instalando o Bubblewrap CLI globalmente

    - name: Install Android SDK and JDK 17
      run: |
        sudo apt update -y
        sudo apt install -y openjdk-17-jdk curl unzip
        
        # Baixando e instalando o Android SDK
        mkdir -p $HOME/android-sdk
        curl -s https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -o commandlinetools-linux.zip
        unzip commandlinetools-linux.zip -d $HOME/android-sdk
        yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk --update
        yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "platforms;android-30"
        
        # Configurando variáveis de ambiente
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/platform-tools:$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH

        # Verificando instalação do Java
        java -version

    - name: Download and save manifest locally
      run: |
        mkdir -p app
        curl -o app/manifest.json https://api.gvendas.app.br/gvendas/site/3/manifest/?format=json
        ls -l app/manifest.json

    - name: Decode Keystore from base64 and create keystore.jks inside app/
      run: |
        mkdir -p app
        echo "${{ secrets.KEYSTORE }}" | base64 --decode > app/keystore.jks
        ls -l app/keystore.jks

    - name: Initialize Bubblewrap project with automated answers
      run: |
        expect <<EOF
        exp_internal 1
        spawn bubblewrap init --manifest="https://api.gvendas.app.br/gvendas/site/3/manifest/?format=json" --directory=app/
        expect "Do you want Bubblewrap to install the JDK (recommended)?" { send "y\r" }
        expect "Do you want Bubblewrap to install the Android SDK?" { send "y\r" }
        expect "Would you like to continue with default configurations?" { send "y\r" }
        expect "Enter the absolute path to the Keystore file" { send "$PWD/app/keystore.jks\r" }
        expect "Enter the Keystore password" { send "${{ secrets.KEYSTORE_PASSWORD }}\r" }
        expect "Enter the Key alias" { send "${{ secrets.KEY_ALIAS }}\r" }
        expect eof
        EOF

    - name: List files in app/ directory
      run: |
        echo "Listing files in the app/ directory"
        ls -l app/  # Listando os arquivos no diretório 'app/'
        echo "End of file listing"

    - name: Build APK (Debug)
      run: |
        bubblewrap build --skipPwaValidation --skipSigning --manifest=$PWD/app/manifest.json --output app/

    - name: Build APK (Release)
      run: |
        bubblewrap build --skipPwaValidation --manifest=$PWD/app/manifest.json --signingKeyPath=$PWD/app/keystore.jks --signingKeyAlias=${{ secrets.KEY_ALIAS }} --output app/

    - name: Upload Debug APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-debug.apk
        path: app/app-debug.apk

    - name: Upload Release APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: app/app-release.apk
