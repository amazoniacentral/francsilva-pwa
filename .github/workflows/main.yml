name: Build Android App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache Node.js
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Cache Android SDK
      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: $HOME/android-sdk
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/build.gradle') }} # Se estiver usando Gradle
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      # Set JAVA_HOME and PATH for JDK
      - name: Set up JDK
        run: |
          export JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.14-7/x64
          export PATH=$JAVA_HOME/bin:$PATH

      # Install Bubblewrap
      - name: Install Bubblewrap
        run: |
          npm install -g @bubblewrap/cli

      # Initialize Bubblewrap, skipping SDK installation
      - name: Initialize Bubblewrap (No SDK Install)
        run: |
          echo "No" | bubblewrap init --manifest https://api.gvendas.app.br/gvendas/site/3/manifest/?format=json --no-interactive --skip-sdk --jdk $JAVA_HOME

      # Build the app with Bubblewrap
      - name: Build Android app with Bubblewrap
        run: |
          bubblewrap build --keystore-path gvendas.keystore --key-password ${{ secrets.KEY_PASSWORD }} --key-alias gvendas

      # Upload the APK as an artifact (optional)
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: ./build/app-release.apk
